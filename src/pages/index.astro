---
import { SITE, SKILLSSHOWCASE_CONFIG, SOCIAL_LINKS } from '~/config.ts'
import { GET } from './api/github.ts'
import { GITHUB_CONFIG, POSTS_CONFIG } from '~/config.ts'
import { padMissingWeeks, postsSort } from '~/lib/utils'
import { getCollection } from 'astro:content'
import Layout from '~/layouts/Layout.astro'
import SectionDivider from '~/components/base/SectionDivider.astro'
import GithubContributions from '~/components/base/GithubContributions.astro'
import SocialLink from '~/components/base/SocialLink.astro'
import List from '~/components/posts/card/List.astro'
import SkillsShowcase from '~/components/base/SkillsShowcase.astro'

const { ENABLED } = GITHUB_CONFIG
const { size, type } = POSTS_CONFIG.homePageConfig
const { SKILLS_ENABLED, SKILLS_DATA } = SKILLSSHOWCASE_CONFIG

let githubFollowerCount = null
let githubGraphqlData: Additional.Github.Week[] = []

if (ENABLED) {
  try {
    const githubInfo = await GET(Astro)
    const githubData = await githubInfo.json()

    // 默认53周，不足53周则填充
    const last53weeks = githubData?.data?.viewer?.contributionsCollection?.contributionCalendar?.weeks.slice(-53)
    const newWeeks = padMissingWeeks(last53weeks, 53)

    githubGraphqlData = newWeeks
    githubFollowerCount = githubData?.data.viewer.followers.totalCount || null
  } catch (error) {
    console.error('Failed to fetch GitHub data:', error)
  }
}

const allPosts = await getCollection('posts')
const posts = postsSort(allPosts).slice(0, size)
---

<Layout title="Readme" description={SITE.description}>
  <div class="relative z-[1]">
    <div class="py-8 pb-10 px-6 sm:px-8">
      <h1 class="flex flex-col gap-2">
        <span class="text-4xl sm:text-5xl tracking-tight"> Litos </span>
        <span class="text-muted-foreground font-light text-xl sm:text-2xl block tracking-wide text-balance">
          一个简约现代的Astro博客主题
        </span>
      </h1>
      <div class="pro text-muted-foreground text-balance">
        <p>
          Litos是基于Astro构建的现代高性能博客主题，灵感来源于
          <a href="https://github.com/needim" target="_blank" rel="nofollow noreferrer"> @needim</a>，一位出色的开发者。
        </p>
        <p>
          使用Tailwind CSS实现优雅的响应式设计，集成React组件以实现流畅的交互体验，支持在亮色和暗色主题之间切换，并提供平滑的过渡动画。
        </p>
      </div>
      <div class="mt-6 flex gap-6">
        {
          SOCIAL_LINKS.map((item) => {
            const isGithub = item.name.toLowerCase() === 'github'
            if (isGithub && ENABLED && githubFollowerCount !== null) {
              return (
                <SocialLink href={item.url} icon={item.icon} count={githubFollowerCount} label="关注者" aria-label="在Github上关注" />
              )
            }
            return <SocialLink href={item.url} icon={item.icon} aria-label={`${item.name}链接`} count={item.count} label="关注者" />
          })
        }
      </div>
    </div>
    {
      ENABLED && githubGraphqlData.length > 0 && (
        <>
          <SectionDivider />
          <div class="py-8 pb-10 px-6 max-md:px-6">
            <div class="px-2 max-md:px-0">
              <h2 class="text-2xl sm:text-3xl">焦点</h2>
              <p class="text-muted-foreground mb-6 mt-1">最近的贡献。</p>
            </div>
            <GithubContributions weeks={githubGraphqlData} />
          </div>
        </>
      )
    }
    {
      SKILLS_ENABLED && SKILLS_DATA.length > 0 && (
        <>
          <SectionDivider />
          <div class="py-8 pb-10 px-6 max-md:px-6">
            <div class="px-2 max-md:px-0">
              <h2 class="text-2xl sm:text-3xl">技能</h2>
              <p class="text-muted-foreground mb-6 mt-1">以下是我使用的一些技能：</p>
            </div>
            <SkillsShowcase skillsData={SKILLS_DATA} />
          </div>
        </>
      )
    }
    <SectionDivider />
    <div class="py-8 pb-10 px-6 sm:px-8">
      <h2 class="text-3xl">文章</h2>
      <p class="text-muted-foreground mb-6 mt-1">
        最近的{posts.length}篇博客文章，希望能有所帮助。
      </p>
      <List {posts} {type} heroImageLayout={POSTS_CONFIG.homePageConfig?.heroImageLayout} />
    </div>
  </div>
</Layout>
